IMPORT FULL DATASET
===================

MySQL: ./process_mysql.sh
 - spark-submit with default parameters
 - Time: 3h 24m 42s
 - Total routes count: 35.042.751
 - Total airports count: 392

MongoDB: /process_mmongo.sh 
 - spark-submit with default parameters
 - Time: 41m 50s
 - Total documents count: 35.042.751

Neo4j: /process_neo4j.sh
 - spark-submit with default parameters
 - Time: 57m 23s (56m 18s spark + 1m 5s neo4j-import)
 - Total airport nodes: 399
 - Total route relationships: 35.043.088


QUERIES
=======

Query #1: Find the most frequent route per month (with only airport ID)
MySQL Time: 4m 41s
MongoDB Time: 3m 20s


Query #1.b: Find the most frequent route per month with airports information (city, state)
MySQL Time: 4m 44s
MongoDB Time: 3m 38s


Query #2: Find the most frequent route per year (with only airport ID)
MySQL Time: 51s
MongoDB Time: 2m 59s


Query #2.b: Find the most frequent route per year with airports information (city, state)
MySQL Time: 51s


Query #3: Find the airport with more flights (in and out) per month
MySQL Time: 1m 13s
MongoDB Time: 3m 39s


Query #4: Find the airport with more flights (in and out) per year
MySQL Time: 1m 4s
MongoDB Time: 3m 24s


Query #6: Find the state with more internal flights (per month)
MongoDB Time: 4m 28s


Query #6.b: Find the state with more internal flights (per year)
MongoDB Time: 4m 11s


Query #7: Find the state with more departure flights to another state (per month)
MongoDB Time: 4m 55s


Query #7.b: Find the state with more departure flights to another state (per year)
MongoDB Time: 4m 38s


Query #8: Find the state with more arrival flights from another state (per month)
MongoDB Time: 4m 51s


Query #8.b: Find the state with more arrival flights from another state (per year)
MongoDB Time: 4m 25s
